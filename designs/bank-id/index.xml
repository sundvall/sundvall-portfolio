<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bank-id on Martin Sundvall</title><link>https://sundvall.github.io/sundvall-portfolio/designs/bank-id/</link><description>Recent content in bank-id on Martin Sundvall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Martin Sundvall</copyright><lastBuildDate>Sun, 02 May 2021 19:47:09 +0200</lastBuildDate><atom:link href="https://sundvall.github.io/sundvall-portfolio/designs/bank-id/index.xml" rel="self" type="application/rss+xml"/><item><title>Vattenfall electricity login flow</title><link>https://sundvall.github.io/sundvall-portfolio/portfolio/vattenfall-login/</link><pubDate>Sun, 02 May 2021 19:47:09 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/portfolio/vattenfall-login/</guid><description>As an internal project me and my team implemented the design and flow to login with bank-id.
I introduced the creation of a visual flowchart as one of the first tasks in the agile sprint. It was created from the given ux-design and included the navigation logic and network traffic. This became the gathering point to early discuss aspects of both ui and api-calls. It also simplifed communication outside the dev-team with stakeholders and testers.</description></item><item><title>Kronofogden my pages</title><link>https://sundvall.github.io/sundvall-portfolio/portfolio/kronofogden/</link><pubDate>Thu, 02 May 2019 19:47:09 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/portfolio/kronofogden/</guid><description>At Kronofogden me and my crossfunctional team cream created application flows for logged in users. I was leading the frontend development and focused on upgrades of the technical environment and improvements in developer experience, aside from implementing accessible forms. The environment was very restricted and provided many challenges to provide access to tooling that is in most circumstances are natural.
As an authority the requirements of accessability were very strict, and an external consultancy firm was engaged to evalutate the results.</description></item><item><title>Comeon casino payment solutions</title><link>https://sundvall.github.io/sundvall-portfolio/portfolio/comeon-casino/</link><pubDate>Tue, 02 May 2017 19:47:09 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/portfolio/comeon-casino/</guid><description>I created the first frontend solution for the mobile payment solution. This was created in pure vanilla javascript and built upon the pre-redux solution of state management called &amp;lsquo;flux&amp;rsquo;. The main idéa was to separate management of data from rendering, and was solved with several &amp;lsquo;stores&amp;rsquo;. The dom-templates were handled by javascript.
When more developers joined and redux with react became popular the first solution was transferred into this. During the rewrite the system was documented with flowcharts.</description></item></channel></rss>