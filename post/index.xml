<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>POSTS on Martin Sundvall</title><link>https://sundvall.github.io/sundvall-portfolio/post/</link><description>Recent content in POSTS on Martin Sundvall</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Martin Sundvall</copyright><lastBuildDate>Tue, 21 Mar 2023 10:37:55 +0200</lastBuildDate><atom:link href="https://sundvall.github.io/sundvall-portfolio/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Use the tools of angular</title><link>https://sundvall.github.io/sundvall-portfolio/post/how-angular-solves-the-problem/</link><pubDate>Tue, 21 Mar 2023 10:37:55 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/post/how-angular-solves-the-problem/</guid><description>With the nose deep down in the context of an frontend application source code, it is important to remember why the framework is there and how to support its usage. As an example, data and logic is separated and flows through inputs, outputs and services. It is possible to pass data around in other ways, but then the tool is unintentionally used.
frontend general problems state management &amp;ldquo;most problems arise from the difficulty to synch state with view&amp;rdquo; handled by separation of logic and presentation asynchronous updates user events network requests pending, success and error states html browserspecificalities guide the user with well designed UX level of accessability css the global cascade of style rules various screen widths javascript javascript has both &amp;ldquo;class&amp;rdquo; syntax and functions and may be developed in many ways javascript has many &amp;ldquo;magic&amp;rdquo; behaviours, like parseInt(0.</description></item><item><title>Checklist for a maintainable angular application</title><link>https://sundvall.github.io/sundvall-portfolio/post/best-practices-angular-development/</link><pubDate>Tue, 21 Mar 2023 09:37:55 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/post/best-practices-angular-development/</guid><description>As a developer in a new context, both in team and in code base, the task was to extend an existing feature. To accomplish this it was not unexpexted to spend some time on resarch and onboarding into the system of, in this case, 2000 files and 185 000 lines of code divided into 485 angular components.
There could be numerous of ways to do this, like in person handover, documentation, well written tests and code following good standards.</description></item><item><title>Tools and paradigms for development</title><link>https://sundvall.github.io/sundvall-portfolio/post/useful-patterns-and-tools-for-angular-development/</link><pubDate>Tue, 21 Mar 2023 09:37:55 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/post/useful-patterns-and-tools-for-angular-development/</guid><description>A collection of very useful patterns and paradigms of angular application, collected from experience, articles and lectures.
patterns and tools S in &amp;ldquo;SOLID&amp;rdquo; The principles of &amp;ldquo;SOLID&amp;rdquo; describes patterns to create reusable and testable code. The &amp;lsquo;S&amp;rsquo; is &amp;lsquo;single responsibility principle&amp;rsquo;:
a component should do one thing a method should do one thing a function should do one thing naming should follow the single task a description of the component, function or method should reflect this fact &amp;ldquo;O&amp;rdquo; in &amp;ldquo;SOLID&amp;rdquo; The &amp;ldquo;open-closed&amp;rdquo; principle.</description></item><item><title>Animated svg controlled by input slider</title><link>https://sundvall.github.io/sundvall-portfolio/post/animated-svg-controlled-by-input-slider/</link><pubDate>Fri, 03 May 2019 09:37:55 +0200</pubDate><guid>https://sundvall.github.io/sundvall-portfolio/post/animated-svg-controlled-by-input-slider/</guid><description>&lt;p>Crossbrowser svg animation created in raw svg markup inside angular component
&lt;a href="https://sundvall.github.io/sundvall-portfolio/sundvall-portfolio/post/animated-svg-controlled-by-input-slider/" >&lt;/p>
&lt;p>&lt;figure>&lt;img src="https://sundvall.github.io/sundvall-portfolio/sundvall-portfolio/post/images/animated-svg-connected-to-slider-480.gif"
alt="Screenshot of animated svg controlled by custom styled input range form element."/>&lt;figcaption>
&lt;p>Screenshot of animated svg controlled by custom styled input range form element.&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;/a>&lt;/p></description></item></channel></rss>